name: Node.js CI - Frontend

on:
  push:
    branches: [ "main" ]

jobs:
  build-fe:
    runs-on: self-hosted
    defaults:
      run: 
        working-directory: frontend  # Ensure this matches the relative path to your frontend folder

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    # Checkout the repository
    - uses: actions/checkout@v4

    # Set up Node.js globally (this sets it up for the entire runner)
 # Set up Node.js for the frontend
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    # Optional: Debugging step to confirm lock file exists
    - name: Check if package-lock.json exists
      run: ls -la package-lock.json

    # Clear npm cache in the frontend directory
    - name: Clear npm cache (Frontend)
      run: npm cache clean --force

    # Install dependencies for the frontend
    - name: Install frontend dependencies
      run: npm install

    # Build the frontend project
    - name: Build frontend
      run: npm run build --if-present

    # Run frontend tests
    - name: Run frontend tests
      run: npm test

  build-be:
    runs-on: self-hosted
    defaults:
      run: 
        working-directory: backend  # Ensure this matches the relative path to your frontend folder

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    # Checkout the repository
    - uses: actions/checkout@v4

    # Set up Node.js globally (this sets it up for the entire runner)
 # Set up Node.js for the backend
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./backend/package-lock.json

    # Optional: Debugging step to confirm lock file exists
    - name: Check if package-lock.json exists
      run: ls -la package-lock.json

    # Clear npm cache in the backend directory
    - name: Clear npm cache (Backend)
      run: npm cache clean --force

    # Install dependencies for the backend
    - name: Install backend dependencies
      run: npm install

    # Build the backend project
    - name: Build frontend
      run: npm run build --if-present

    # Run backend tests
    - name: Run backend tests
      run: npm test
